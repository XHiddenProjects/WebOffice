//terminal
$(document).ready(function(){
    $('.terminal-input:not(.noType) span.cmd').attr('contentEditable',true);
    function setInfo(){
        const info = $('.terminal .terminal-input:not(.noType)'),
        user = info.attr('data-terminal-user'),
        host = info.attr('data-terminal-host'),
        cwd = info.attr('data-terminal-cwd');
        if($('.terminal').attr('terminal-theme')==='gnome')
            info.find('.currentInfo').html(`<span class="userHost">${user}@${host}</span>:<span class="cwd">${cwd}</span>$`);
        else if($('.terminal').attr('terminal-theme')==='cmdPrompt')
            info.find('.currentInfo').html(`<span class="userHost">${user}@${host}</span><span class="cwd">${cwd}</span>>`);
        else if($('.terminal').attr('terminal-theme')==='powershell')
            info.find('.currentInfo').html(`PS <span class="userHost">${user}@${host}</span><span class="cwd">${cwd}</span>>`);
        else if($('.terminal').attr('terminal-theme')==='macOS')
            info.find('.currentInfo').html(`<span class="userHost">${user}@${host}</span> <span class="cwd">${cwd}</span> %`);
        
    }
    $('.terminal').on('click',function(){
        $(this).find('.terminal-input:not(.noType)').focus();
    });

    $('.terminal .terminal-theme-select').on('change',function(){
        const theme = $(this).val();
        $(this).parent().attr('terminal-theme',theme);
        $original = $('.terminal .terminal-history').children(':first-child');
        $('.terminal .terminal-history').html('');
        createInput($original);
    });

    $('.terminal').on('paste',function(e){
        e.preventDefault();
        // Get pasted HTML content
        var clipboardData = (e.originalEvent.clipboardData || window.clipboardData);
        var pastedData = clipboardData.getData('text/html') || clipboardData.getData('text/plain');
        if (pastedData && pastedData.startsWith('<')) {
            // Create a temporary container to manipulate
            var $tempDiv = $('<div>').html(pastedData);
            // Remove all inline styles
            $tempDiv.find('*').removeAttr('style');
            // Insert cleaned HTML
            document.execCommand('insertHTML', false, $tempDiv.html());
        } else {
            // Plain text: just insert it
            document.execCommand('insertText', false, pastedData);
        }
    });

    function createInput(current){
        $(current).find('.cmd').removeAttr('contentEditable');
        $(current).addClass('noType');
        const user = $(current).attr('data-terminal-user'),
        host = $(current).attr('data-terminal-host');
        let cwd;
        if($('.terminal-output').last().length>0&&$('.terminal-output').last().text().match(/^Changed Directory: (.+)$/))
            cwd =  $('.terminal-output').last().text().match(/^Changed Directory: (.+)$/)[1];
        else
            cwd =  $(current).attr('data-terminal-cwd');
        
        
        $input = $('<div/>').addClass('terminal-input')
        .attr('data-terminal-user',user)
        .attr('data-terminal-host',host)
        .attr('data-terminal-cwd',cwd)
        .html(`<span class="currentInfo"></span>
            <span class="cmd" contentEditable="true"></span>`);
        $input.find('.cmd').on('keydown',function(e){
            const k = e.key;
            if(k==='Enter'){
                e.preventDefault();
                const command = $(this).text();
                const $main = $(this);
                if(command.match('clear')) {
                    $('.terminal .terminal-history').html('');
                    createInput($main.parent()[0]);
                }
                else{
                    // Send command to server
                    fetch(`${BASE}/vendor/terminal.php`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                        body: `dir=${encodeURIComponent($(this).parent().attr('data-terminal-cwd'))}&cmd=${encodeURIComponent(command)}`
                    })
                    .then(response => response.text())
                    .then(output => {
                        $span = $('<p/>').addClass('terminal-output').text(output||`Can't read command, use:\n-Windows: wsl /bin/bash -c "your_command"\n-MacOS & Linux: /bin/bash -c "your_command"`);
                        $(this).parent().append($span);
                        createInput($main.parent()[0]);
                    });
                }
            }
        });
        $('.terminal .terminal-history').append($input);
        $(`.terminal .terminal-input:not(.noType)`).focus();
        setInfo()
    }

    setInfo();

    $('.terminal-input:not(.noType) span.cmd').on('keydown',function(e){
        const k = e.key;
        if(k==='Enter'){
            e.preventDefault();
            const command = $(this).text();
            const $main = $(this);
            if(command.match('clear')){
                $('.terminal .terminal-history').html('');
                createInput($main.parent()[0]);
            } else{
                // Send command to server
                fetch(`${BASE}/vendor/terminal.php`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `dir=${encodeURIComponent($(this).parent().attr('data-terminal-cwd'))}&cmd=${encodeURIComponent(command)}`
                })
                .then(response => response.text())
                .then(output => {
                    $span = $('<p/>').addClass('terminal-output').text(output||`Can't read command, use: \n-Windows: wsl /bin/bash -c "your_command"\n-MacOS & Linux: /bin/bash -c "your_command"`);
                    $(this).parent().append($span);
                    createInput($main.parent()[0]);
                });
            }
        }
    });


});
